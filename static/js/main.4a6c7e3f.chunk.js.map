{"version":3,"sources":["components/Member.js","components/Members.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["Member","props","react_default","a","createElement","className","key","member","id","style","margin","first_name","last_name","onClick","editButtonHandler","deleteButtonHandler","Members","members","map","components_Member","Form","Fragment","formStatus","action","onSubmit","onSubmitHandler","htmlFor","type","name","value","onChange","changeInputHandler","disabled","buttonDisabled","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getUsers","axios","get","then","response","setState","data","catch","err","console","log","event","defineProperty","target","preventDefault","payload","state","url","addMember","concat","memberIdSelected","editMember","post","toConsumableArray","push","put","indexMember","findIndex","delete","status","splice","_this2","border","components_Members","components_Form","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0SAgBeA,EAdA,SAACC,GAAD,OACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAKL,EAAMM,OAAOC,IACpCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,MAAO,CAAEC,OAAQ,KACvCR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMM,OAAOC,IACzCN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMM,OAAOI,YACzCT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAMM,OAAOK,WACzCV,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBQ,QAAS,kBAAMZ,EAAMa,kBAAkBb,EAAMM,UAAjF,QACAL,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBQ,QAAS,kBAAMZ,EAAMc,oBAAoBd,EAAMM,OAAOC,MAAzF,cCIDQ,EAXC,SAACf,GAAD,OACZA,EAAMgB,QAAQC,IAAI,SAACX,GAAD,OACdL,EAAAC,EAAAC,cAACe,EAAD,CACIb,IAAKC,EAAOC,GACZD,OAAQA,EACRO,kBAAmB,SAACP,GAAD,OAAYN,EAAMa,kBAAkBP,IACvDQ,oBAAqB,SAACP,GAAD,OAAQP,EAAMc,oBAAoBP,SCUpDY,EAjBF,SAACnB,GAAD,OACTC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkB,SAAA,KACAnB,EAAAC,EAAAC,cAAA,kBAAUH,EAAMqB,YAChBpB,EAAAC,EAAAC,cAAA,QAAMmB,OAAO,GAAGC,SAAUvB,EAAMwB,iBAC5BvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOsB,QAAQ,IAAf,cACAxB,EAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOtB,UAAU,eAAeuB,KAAK,aAAaC,MAAO5B,EAAMU,WAAYmB,SAAU7B,EAAM8B,sBAE3G7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOsB,QAAQ,IAAf,aACAxB,EAAAC,EAAAC,cAAA,SAAOuB,KAAK,OAAOtB,UAAU,eAAeuB,KAAK,YAAYC,MAAO5B,EAAMW,UAAWkB,SAAU7B,EAAM8B,sBAEzG7B,EAAAC,EAAAC,cAAA,UAAQuB,KAAK,SAAStB,UAAU,kBAAkB2B,SAAU/B,EAAMgC,gBAAlE,aCgIOC,cAvIb,SAAAA,EAAYjC,GAAO,IAAAkC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMrC,KAWRyC,SAAW,WACTC,IAAMC,IAAI,sCACPC,KAAM,SAAAC,GACLX,EAAKY,SAAU,CAAC9B,QAAS6B,EAASE,KAAKA,SAExCC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAjBXf,EAyBnBJ,mBAAqB,SAAAsB,GACnBlB,EAAKY,SAALX,OAAAkB,EAAA,EAAAlB,CAAA,GAAgBiB,EAAME,OAAO3B,KAAOyB,EAAME,OAAO1B,SA1BhCM,EA6BnBV,gBAAkB,SAAA4B,GAChBF,QAAQC,IAAI,uBACZC,EAAMG,iBACNrB,EAAKY,SAAS,CAAEd,gBAAgB,IAChC,IAAIwB,EAAU,CACZ9C,WAAYwB,EAAKuB,MAAM/C,WACvBC,UAAWuB,EAAKuB,MAAM9C,WAGpB+C,EAAM,GACoB,WAA1BxB,EAAKuB,MAAMpC,YACbqC,EAAM,8BACNxB,EAAKyB,UAAUD,EAAKF,KAEpBE,EAAG,+BAAAE,OAAkC1B,EAAKuB,MAAMI,kBAChD3B,EAAK4B,WAAWJ,EAAKF,KA5CNtB,EAiDnByB,UAAY,SAACD,EAAKF,GAChBd,IAAMqB,KAAKL,EAAKF,GACbZ,KAAK,SAAAC,GACJK,QAAQC,IAAIN,GACZ,IAAI7B,EAAOmB,OAAA6B,EAAA,EAAA7B,CAAMD,EAAKuB,MAAMzC,SAC5BA,EAAQiD,KAAKpB,EAASE,MACtBb,EAAKY,SAAS,CAAE9B,UAASgB,gBAAgB,EAAOtB,WAAY,GAAIC,UAAW,OAE5EqC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAzDXf,EA4DnB4B,WAAa,SAACJ,EAAKF,GACjBd,IAAMwB,IAAIR,EAAKF,GACdZ,KAAK,SAAAC,GACJK,QAAQC,IAAIN,GACZ,IAAI7B,EAAOmB,OAAA6B,EAAA,EAAA7B,CAAOD,EAAKuB,MAAMzC,SACzBmD,EAAcnD,EAAQoD,UAAU,SAAA9D,GAAM,OAAIA,EAAOC,KAAO2B,EAAKuB,MAAMI,mBAEvE7C,EAAQmD,GAAazD,WAAamC,EAASE,KAAKrC,WAChDM,EAAQmD,GAAaxD,UAAYkC,EAASE,KAAKpC,UAE/CuB,EAAKY,SAAS,CACZ9B,UACAgB,gBAAgB,EAChBtB,WAAY,GACZC,UAAW,GACXU,WAAY,aAGf2B,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA9ETf,EAiFnBrB,kBAAoB,SAAAP,GAClB4B,EAAKY,SAAS,CACZpC,WAAYJ,EAAOI,WACnBC,UAAWL,EAAOK,UAClBU,WAAY,OACZwC,iBAAkBvD,EAAOC,MAtFV2B,EA0FnBpB,oBAAsB,SAAAP,GACpB,IAAImD,EAAG,+BAAAE,OAAkCrD,GACzCmC,IAAM2B,OAAOX,GACVd,KAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASyB,OAAgB,CAC3B,IAAItD,EAAOmB,OAAA6B,EAAA,EAAA7B,CAAOD,EAAKuB,MAAMzC,SACzBmD,EAAcnD,EAAQoD,UAAU,SAAA9D,GAAM,OAAIA,EAAOC,KAAOA,IAC5DS,EAAQuD,OAAOJ,EAAa,GAC5BjC,EAAKY,SAAS,CAAC9B,eAGlBgC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAnG5Bf,EAAKuB,MAAQ,CACXzC,QAAS,GACTN,WAAY,GACZC,UAAW,GACXqB,gBAAgB,EAChBX,WAAY,SACZwC,iBAAkB,MARH3B,mFAsBjBG,KAAKI,4CAkFE,IAAA+B,EAAAnC,KACP,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWI,MAAO,CAAEiE,OAAQ,oBACzCxE,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACuE,EAAD,CACE1D,QAASqB,KAAKoB,MAAMzC,QACpBH,kBAAmB,SAACP,GAAD,OAAYkE,EAAK3D,kBAAkBP,IACtDQ,oBAAqB,SAACP,GAAD,OAAQiE,EAAK1D,oBAAoBP,QAI5DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWI,MAAO,CAAEiE,OAAQ,oBACzCxE,EAAAC,EAAAC,cAACwE,EAAD,CACEtD,WAAYgB,KAAKoB,MAAMpC,WACvBG,gBAAiBa,KAAKb,gBACtBM,mBAAoBO,KAAKP,mBACzBpB,WAAY2B,KAAKoB,MAAM/C,WACvBC,UAAW0B,KAAKoB,MAAM9C,UACtBqB,eAAgBK,KAAKoB,MAAMzB,2BA/HvB4C,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlF,EAAAC,EAAAC,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,KAAK,SAAA8C,GACjCA,EAAaC","file":"static/js/main.4a6c7e3f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Member = (props) => (\r\n    <div className=\"col-md-6\" key={props.member.id}>\r\n            <div className=\"card\" style={{ margin: 10 }}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{props.member.id}</h5>\r\n                <h5 className=\"card-title\">{props.member.first_name}</h5>\r\n                <h5 className=\"card-title\">{props.member.last_name}</h5>\r\n                <button className=\"btn btn-primary\" onClick={() => props.editButtonHandler(props.member)}>Edit</button>\r\n                <button className=\"btn btn-danger\" onClick={() => props.deleteButtonHandler(props.member.id)}>Delete</button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n)\r\n\r\nexport default Member;","import React from 'react';\r\nimport Member from './Member';\r\n\r\nconst Members = (props) => (\r\n    props.members.map((member) => (\r\n        <Member\r\n            key={member.id}\r\n            member={member}\r\n            editButtonHandler={(member) => props.editButtonHandler(member)}\r\n            deleteButtonHandler={(id) => props.deleteButtonHandler(id)}\r\n        />\r\n    ))\r\n);\r\n\r\nexport default Members;","import React from 'react';\r\n\r\nconst Form = (props) => (\r\n    <>\r\n    <h2>Form {props.formStatus}</h2>\r\n    <form action=\"\" onSubmit={props.onSubmitHandler}>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"\">First Name</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"first_name\" value={props.first_name} onChange={props.changeInputHandler}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"\">Last Name</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"last_name\" value={props.last_name} onChange={props.changeInputHandler}/>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={props.buttonDisabled}>Submit</button>\r\n    </form>\r\n    </>\r\n)\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Members from './components/Members';\nimport Form from './components/Form';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: [],\n      first_name: '',\n      last_name: '',\n      buttonDisabled: false,\n      formStatus: 'create',\n      memberIdSelected: null\n    };\n  }\n\n  getUsers = () => {\n    axios.get('https://reqres.in/api/users?page=1')\n      .then( response => {\n        this.setState( {members: response.data.data} )\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  changeInputHandler = event => {\n    this.setState({[event.target.name]: event.target.value})\n  };\n\n  onSubmitHandler = event => {\n    console.log(\"form telah disubmit\")\n    event.preventDefault()\n    this.setState({ buttonDisabled: true })\n    var payload = {\n      first_name: this.state.first_name,\n      last_name: this.state.last_name\n    };\n    \n    var url = \"\"\n    if (this.state.formStatus === \"create\") {\n      url = \"https://reqres.in/api/users\"\n      this.addMember(url, payload)\n    } else {\n      url = `https://reqres.in/api/users/${this.state.memberIdSelected}`\n      this.editMember(url, payload)\n    }\n    \n  }\n\n  addMember = (url, payload) => {\n    axios.post(url, payload)\n      .then(response => {\n        console.log(response)\n        let members =[...this.state.members]\n        members.push(response.data)\n        this.setState({ members, buttonDisabled: false, first_name: '', last_name: '' })\n      })\n      .catch(err => console.log(err))\n  };\n\n  editMember = (url, payload) => {\n    axios.put(url, payload)\n    .then(response => {\n      console.log(response)\n      var members = [...this.state.members]\n      var indexMember = members.findIndex(member => member.id === this.state.memberIdSelected)\n\n      members[indexMember].first_name = response.data.first_name\n      members[indexMember].last_name = response.data.last_name\n\n      this.setState({\n        members,\n        buttonDisabled: false,\n        first_name: '',\n        last_name: '',\n        formStatus: \"create\"\n      })\n    })\n    .catch(err => console.log(err))\n  };\n\n  editButtonHandler = member => {\n    this.setState({\n      first_name: member.first_name,\n      last_name: member.last_name,\n      formStatus: \"edit\",\n      memberIdSelected: member.id\n    })\n  }\n\n  deleteButtonHandler = id => {\n    var url = `https://reqres.in/api/users/${id}`\n    axios.delete(url)\n      .then(response => {\n        if (response.status === 204) {\n          var members = [...this.state.members]\n          var indexMember = members.findIndex(member => member.id === id)\n          members.splice(indexMember, 1)\n          this.setState({members})\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Codepolitan DevSchool</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6\" style={{ border: '1px solid black'}}>\n            <h2>Member</h2>\n            <div className=\"row\">\n              <Members\n                members={this.state.members}\n                editButtonHandler={(member) => this.editButtonHandler(member)}\n                deleteButtonHandler={(id) => this.deleteButtonHandler(id)}\n              />\n            </div> \n          </div>\n          <div className=\"col-md-6\" style={{ border: '1px solid black'}}>\n            <Form\n              formStatus={this.state.formStatus}\n              onSubmitHandler={this.onSubmitHandler}\n              changeInputHandler={this.changeInputHandler}\n              first_name={this.state.first_name}\n              last_name={this.state.last_name}\n              buttonDisabled={this.state.buttonDisabled}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}